diff -rupN cm/services/surfaceflinger/Android.mk sze/services/surfaceflinger/Android.mk
--- cm/services/surfaceflinger/Android.mk	2013-11-16 17:17:00.000000000 +0100
+++ sze/services/surfaceflinger/Android.mk	2013-11-17 11:42:00.000000000 +0100
@@ -48,6 +48,10 @@ ifeq ($(TARGET_DISABLE_TRIPLE_BUFFERING)
 	LOCAL_CFLAGS += -DTARGET_DISABLE_TRIPLE_BUFFERING
 endif
 
+ifeq ($(TARGET_QCOM_DISPLAY_VARIANT), legacy)
+  LOCAL_CFLAGS += -DEGL_NEEDS_FNW
+endif
+
 ifneq ($(NUM_FRAMEBUFFER_SURFACE_BUFFERS),)
   LOCAL_CFLAGS += -DNUM_FRAMEBUFFER_SURFACE_BUFFERS=$(NUM_FRAMEBUFFER_SURFACE_BUFFERS)
 endif
diff -rupN cm/services/surfaceflinger/DisplayDevice.cpp sze/services/surfaceflinger/DisplayDevice.cpp
--- cm/services/surfaceflinger/DisplayDevice.cpp	2013-11-16 17:17:00.000000000 +0100
+++ sze/services/surfaceflinger/DisplayDevice.cpp	2013-11-17 11:42:57.000000000 +0100
@@ -29,6 +29,10 @@
 
 #include <gui/Surface.h>
 
+#ifdef BOARD_EGL_NEEDS_LEGACY_FB
+#include <ui/FramebufferNativeWindow.h>
+#endif
+
 #include <hardware/gralloc.h>
 
 #include "DisplayHardware/DisplaySurface.h"
@@ -74,8 +78,11 @@ DisplayDevice::DisplayDevice(
       mOrientation()
 {
     mNativeWindow = new Surface(producer, false);
+#ifndef BOARD_EGL_NEEDS_LEGACY_FB
     ANativeWindow* const window = mNativeWindow.get();
-
+#else
+    ANativeWindow* const window = new FramebufferNativeWindow();
+#endif
     int format;
     window->query(window, NATIVE_WINDOW_FORMAT, &format);
 
